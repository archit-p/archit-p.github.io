{"version":3,"sources":["webpack:///./src/components/Breadcrumbs.js","webpack:///./src/pages/blog.js"],"names":["Breadcrumbs","path","rest","trimmedPath","length","slice","items","split","breadcrumbs","push","style","fontWeight","display","marginRight","key","aria-current","color","textDecoration","borderBottom","paddingBottom","to","currentLink","i","Blog","location","data","useStaticQuery","className","meta","title","description","keywords","pathname","marginTop","flexDirection","allMarkdownRemark","edges","map","post","node","frontmatter","slug","fontSize","date"],"mappings":"qKA+EeA,IA5Ef,YAAyC,IAAlBC,EAAiB,EAAjBA,KAASC,EAAQ,wBAClCC,EAAcF,EACY,MAA1BA,EAAKA,EAAKG,OAAS,KACrBD,EAAcA,EAAYE,MAAM,GAAI,IAEtC,IAAMC,EAAQH,EAAYI,MAAM,KAE5BC,EAAc,GAElBA,EAAYC,KACV,0BACEC,MAAO,CACLC,WAAY,IACZC,QAAS,eACTC,YAAa,WAEfC,IAAI,eANN,MAWFN,EAAYC,KACV,kBAAC,IAAD,CACEM,eAAa,OACbL,MAAO,CACLC,WAAY,IACZK,MAAO,QACPC,eAAgB,OAChBC,aAAc,uBACdC,cAAe,UACfN,YAAa,WAEfC,IAAI,OACJM,GAAG,KAXL,kBAiBF,IADA,IAAIC,EAAc,IACTC,EAAI,EAAGA,EAAIhB,EAAMF,OAAS,IAAKkB,EACtCD,GAAef,EAAMgB,GACrBd,EAAYC,KACV,0BACEC,MAAO,CACLC,WAAY,IACZC,QAAS,eACTC,YAAa,WAEfC,IAAK,aAAeQ,GANtB,MAWFd,EAAYC,KACV,kBAAC,IAAD,CACEM,eAAa,OACbL,MAAO,CACLC,WAAY,IACZK,MAAO,QACPC,eAAgB,OAChBC,aAAc,iBACdC,cAAe,UACfN,YAAa,WAEfO,GAAIC,EACJP,IAAKR,EAAMgB,IAEVhB,EAAMgB,KAGXD,GAAe,IAGjB,OAAO,wBAASnB,EAAOM,K,kCC5EzB,4FAyEee,UAzDf,YAA6B,IAAbC,EAAY,EAAZA,SAERC,EAAOC,YAAe,cAgB5B,OACE,yBAAKC,UAAU,aACb,kBAAC,IAAD,CAAUC,KA5BP,CACLC,MAAO,uBACPC,YACE,qGACFC,SAAU,mCAyBR,kBAAC,IAAD,CAAa9B,KAAMuB,EAASQ,SAAUtB,MAAO,CAAEuB,UAAW,UAC1D,yBACEvB,MAAO,CAAEE,QAAS,OAAQsB,cAAe,SAAUD,UAAW,SAE7DR,EAAKU,kBAAkBC,MAAMC,KAAI,SAAAC,GAAI,OACpC,yBACEX,UAAU,OACVjB,MAAO,CACLE,QAAS,iBAGX,kBAAC,IAAD,CACEQ,GAAIkB,EAAKC,KAAKC,YAAYC,KAC1B/B,MAAO,CACLgC,SAAU,SACV/B,WAAY,IACZM,eAAgB,OAChBD,MAAO,UAGRsB,EAAKC,KAAKC,YAAYX,OAEzB,0BACEF,UAAU,OACVjB,MAAO,CAAEgC,SAAU,WAAY9B,QAAS,SAAUI,MAAO,SAExDsB,EAAKC,KAAKC,YAAYG,WAK/B,kBAAC,IAAD","file":"component---src-pages-blog-js-0102332f651d60b761b0.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nfunction Breadcrumbs({ path, ...rest }) {\n  let trimmedPath = path\n  if (path[path.length - 1] === \"/\") {\n    trimmedPath = trimmedPath.slice(0, -1)\n  }\n  const items = trimmedPath.split(\"/\")\n\n  let breadcrumbs = []\n  // first push the homepage link\n  breadcrumbs.push(\n    <span\n      style={{\n        fontWeight: 700,\n        display: \"inline-block\",\n        marginRight: \"0.25rem\",\n      }}\n      key=\"seperator-0\"\n    >\n      /\n    </span>\n  )\n  breadcrumbs.push(\n    <Link\n      aria-current=\"page\"\n      style={{\n        fontWeight: 700,\n        color: \"black\",\n        textDecoration: \"none\",\n        borderBottom: \"0.125rem solid black\",\n        paddingBottom: \"0.25rem\",\n        marginRight: \"0.25rem\",\n      }}\n      key=\"home\"\n      to=\"/\"\n    >\n      Archit Pandey\n    </Link>\n  )\n  let currentLink = \"/\"\n  for (var i = 1; i < items.length - 1; ++i) {\n    currentLink += items[i]\n    breadcrumbs.push(\n      <span\n        style={{\n          fontWeight: 700,\n          display: \"inline-block\",\n          marginRight: \"0.25rem\",\n        }}\n        key={\"seperator-\" + i}\n      >\n        /\n      </span>\n    )\n    breadcrumbs.push(\n      <Link\n        aria-current=\"page\"\n        style={{\n          fontWeight: 700,\n          color: \"black\",\n          textDecoration: \"none\",\n          borderBottom: \"0.125rem solid\",\n          paddingBottom: \"0.25rem\",\n          marginRight: \"0.25rem\",\n        }}\n        to={currentLink}\n        key={items[i]}\n      >\n        {items[i]}\n      </Link>\n    )\n    currentLink += \"/\"\n  }\n\n  return <div {...rest}>{breadcrumbs}</div>\n}\n\nexport default Breadcrumbs\n","import React from \"react\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport Footer from \"../components/Footer\"\nimport Breadcrumbs from \"../components/Breadcrumbs\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport PageMeta from \"../components/PageMeta\"\n\nfunction getBlogMetaData() {\n  return {\n    title: \"Blog - Archit Pandey\",\n    description:\n      \"Interesting tech and programming findings, experimenting with difference languages and frameworks.\",\n    keywords: \"blog, technology, programming\",\n  }\n}\n\nfunction Blog({ location }) {\n  // we are querying graphql store for getting all markdown data\n  const data = useStaticQuery(graphql`\n    {\n      allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\n        edges {\n          node {\n            frontmatter {\n              date(formatString: \"MMMM Do YYYY\")\n              slug\n              title\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <div className=\"container\">\n      <PageMeta meta={getBlogMetaData()} />\n      <Breadcrumbs path={location.pathname} style={{ marginTop: \"4rem\" }} />\n      <div\n        style={{ display: \"flex\", flexDirection: \"column\", marginTop: \"4rem\" }}\n      >\n        {data.allMarkdownRemark.edges.map(post => (\n          <div\n            className=\"mb-2\"\n            style={{\n              display: \"inline-block\",\n            }}\n          >\n            <Link\n              to={post.node.frontmatter.slug}\n              style={{\n                fontSize: \"1.5rem\",\n                fontWeight: 700,\n                textDecoration: \"none\",\n                color: \"black\",\n              }}\n            >\n              {post.node.frontmatter.title}\n            </Link>\n            <span\n              className=\"ml-1\"\n              style={{ fontSize: \"0.875rem\", display: \"inline\", color: \"gray\" }}\n            >\n              {post.node.frontmatter.date}\n            </span>\n          </div>\n        ))}\n      </div>\n      <Footer />\n    </div>\n  )\n}\n\nexport default Blog\n"],"sourceRoot":""}